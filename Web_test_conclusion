                Web测试技术总结


一、web系统相关测试技术，主要包含：
	1、web系统通用的功能测试
	2、web系统的易用性测试
	3、web系统的性能测试
	4、web系统的兼容性测试
	5、web系统的安全性测试



二、功能测试通常从以下几个角度对软件进行评价：
	1、软件是否正确实现了需求规格说明书中明确定义的需求
	2、软件是否遗漏了需求规格说明书中明确定义的需求
	3、软件是否实现了需求规格说明书中未定义的需求
	4、软件是否对异常情况进行了处理，容错性好
	5、软件是否满足用户的使用需求



三、链接测试
	对页面的链接测试主要包含如下几点：
		1、超链接与说明文字是否相匹配
		2、超链接对应的 URL 地址存在，不能出现 404 找不到网页的错误
		3、超链接未链接到任何地址，什么都不做
		4、链接的描述必须精简有效
		5、可使用 Xenu 这类工具测试超链接



四、表单测试
	1、输入框长度限制（可使用 maxlength 这一 HTML 属性来限制 ）
	2、输入框类型限制
	3、输入框模式匹配 （例如：只允许输入日期格式，那么其他格式就不应该被接受）
	4、表单界面的显示：文字环绕、随窗口的大小调整页面大小
		*功能方面：
			1）、内容正确性，通过提交后的数据库内容或者返回的页面信息判断
			2）、每个字段的等价类和边界值测试
			3）、每个字段的类型和实际所接受的数据类型（数字、文本、日期等）
			4）、页面是否有不该有的源代码
			5）、必填项
			6）、下拉列表的选择性和可填性
			7）、下拉列表的选择内容提供
			8）、单选框的独选性
			9）、长文本的滚动条
			10）、文本框的格式化
		*UI界面方面：
			1）、页面文字的正确性
			2）、页面缩放带来的文字环绕
			3）、界面输入框的可承载长度，超过最长长度是否不显示，被截断？



五、cookie 测试
	主要包含以下几个场景：
		1、cookie 的作用域是否合理
		2、用于保存一些关键数据的 cookie 是否被加密
		3、cookie 的过期时间是否正确合理

	介绍几个 cookie 的测试方法：
		1、屏蔽 cookie
			目的：检查当 cookie 被屏蔽时 web 系统会出现什么问题
		2、有选择性的拒绝 cookie
			目的：测试如果某些 cookie 被接受，某些 cookie 被拒绝，web 系统会发生什么问题
		3、cookie 加密测试
			目的：检查存储的 cookie 文件内容，看是否有用户名、密码等敏感信息存储，且未被加密处理
		4、cookie 安全内容检查
			1）、cookie 过期日期设置的合理性，是否过长
			2）、HttpOnly 属性的设置：把 cookie 的 HttpOnly 属性设置为 ture 有助于缓解跨站点脚本威胁，防止 cookie 被窃取
			3）、Secure 属性的设置：把 cookie 的 Secure 属性设置为 ture ，再传输cookie时，使用 ssl 链接，能保护数据在传输过程中不被篡改



六、session 测试
	1、session 不能过度使用，会加重服务器维护 session 的负担
	2、session 的过期时间设置的是否合理
	3、session 的键值是否对应
	4、session 过期后是否在客户端生成新的 sessionID
	5、session 和 cookie 是否存在冲突



七、文件上传测试
	主要关注如下几点：
		1、只能上传允许的附件类型
		2、不能上传脚本或可执行文件
		3、不能单纯以后缀名来判断文件类型
		4、浏览好文件后，将目标文件删除这种异常情况可以正常处理
		5、上传超大文件时可以正常处理，比如给出提示
		6、上传的文件应该提供接口查看
		7、上传的文件不应该直接保存于数据库中，而是将文件保存在服务器端硬盘，而数据库中保存该文件的基本信息
		8、文件上传到服务器端后应该被重命名，防止文件名冲突



八、数据库测试
	1、数据库表结构是否合理
	2、表与表之间的关系是否理清，主外键是否合理
	3、列的类型和长度定义是否满足功能和性能方面的要求
	4、索引的创建是否合理
	5、存储过程是否功能完整，可以使用 SQL 语句对存储过程进行详细测试，而不单只是从黑盒层面进行测试
	6、可以使用常见的一些数据库测试工具，如：DBFactory 、DBUnit 、SQLUnit等




九、性能测试
	通常关注点如下：
		1、客户端响应时间是否满足要求，评估系统处理速度是否达标
		2、服务器资源使用情况是否合理，评估系统硬件配置是否合理
		3、应用服务器和数据库资源使用是否合理，评估服务器资源使用是否合理
		4、最大访问数，最大业务处理量是多少，评估系统处理能力
		5、系统可能存在的瓶颈在哪里
		6、能否支持 7*24 小时的业务访问，评估系统的稳定性
		7、架构和数据库设计是否合理，便于对系统进行优化
		8、内存和线程资源是否被正常回收，评估系统崩溃的风险
		9、代码或SQL语句是否存在性能问题
		10、如果系统出现不稳定情况，其可恢复性如何

	对于网络应用程序，通常从三个方面进行测试：
		1、代码级
		2、应用级
		3、协议级


	对于基于协议的性能测试，只需满足如下三个条件即可：
		1、基于协议：通过协议发送请求，只关注请求与响应，忽略软件产品界面级的操作
		2、多线程并发：多线程并发向服务器提交请求来对服务器进行负载和压力测试，模拟多用户
		3、模拟真实场景：必须真实再现用户场景，否则性能测试数据将没有参考价值



	性能测试通常使用两种方法来执行：
		1、负载测试：关注的是不同负载水平（如：50并发、100并发、200并发... ...）的系统性能指标，主要用于评估系统性能指标。
		2、压力测试：关注在超高负载（超过系统最大用户数）的情况下，系统是否还能稳定处理。（不需要关注性能指标，重点关注系统是如何失效的）

		//常用性能测试工具有：LoadRunner 、QALoad 、Jmeter 等
		