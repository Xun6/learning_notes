<html xmlns:v="urn:schemas-microsoft-com:vml"
    xmlns:o="urn:schemas-microsoft-com:office:office"
    xmlns:w="urn:schemas-microsoft-com:office:word"
    xmlns="http://www.w3.org/TR/REC-html40">
    <head><meta http-equiv=Content-Type content="text/html; charset=utf-8">
    <style type="text/css">
        table  
        {  
            border-collapse: collapse;
            border: none;  
            width: 100%;  
        }  
        td,tr  
        {  
            border: solid #CCC 1px;
            padding:3px;
            font-size:9pt;
        } 
        .codestyle{
            word-break: break-all;
            mso-highlight:rgb(252, 252, 252);
            padding-left: 5px; background-color: rgb(252, 252, 252); border: 1px solid rgb(225, 225, 232);
        }
        img {
            width:100;
        }
    </style>
    <meta name=ProgId content=Word.Document>
    <meta name=Generator content="Microsoft Word 11">
    <meta name=Originator content="Microsoft Word 11">
    <xml><w:WordDocument><w:View>Print</w:View></xml></head>
    <body><h1>1、jmeter+ant+jenkins集成</h1><div style="margin-left:20px;"><h3>背景介绍</h3>
<hr />
<ul>
<li><strong>批量跑指定接口：我们可以利用ant批量跑指定目录下的Jmeter脚本</strong></li>
<li><strong>生成接口运行报告：使用Jmeter(extras目录下)自带的jmeter-results-detail-report_21.xsl样式文件</strong></li>
<li><strong> 定位报错接口：使用扩展的jmeter-results-shanhe-me.xsl样式文件，输出的信息比自带的jmeter-results-detail-report_21.xsl多</strong></li>
<li><strong>接口定时任务：使用Jenkins的build periodically完成</strong></li>
<li><strong>邮件通知：使用Jenkins的Extended E-mail Notification插件</strong></li>
</ul>
<h3>1、Jmeter</h3>
<hr />
<h4>1.1、下载安装包</h4>
<p>下载地址：<a href="https://jmeter.apache.org/download_jmeter.cgi">https://jmeter.apache.org/download_jmeter.cgi</a></p>
<h4>1.2、配置环境变量</h4>
<ul>
<li>JMETER_HOME 为 Jmeter安装路径;</li>
<li>CLASSPATH为 %JMETER_HOME%\lib;</li>
<li>Path为%JMETER_HOME%\bin;</li>
</ul>
<h4>1.3、安装验证</h4>
<p>在命令窗口中输入jmeter -v回车，能出现Jmeter版本则说明配置成功</p>
<p><strong>eg：</strong>jmeter -n -t <strong>sample.jmx</strong> -l <strong>log.jtl</strong>
<strong>示例含义：</strong>表示以命令行模式运行<strong>sample.jmx</strong>文件，输出的日志文件为<strong>log.jtl</strong></p>
<blockquote>
<ul>
<li><strong>-n 这是指定JMeter在非用户界面模式运行</strong></li>
<li><strong>-t 包含测试计划的JMX文件的名字</strong></li>
<li><strong>-l 记录取样结果的JTL文件的名字</strong></li>
</ul>
</blockquote>
<h3>2、Jmeter+ANT</h3>
<hr />
<h4>2.1、下载地址</h4>
<p><a href="http://ant.apache.org/bindownload.cgi，下载后解压到指定位置即可">http://ant.apache.org/bindownload.cgi，下载后解压到指定位置即可</a>。</p>
<h4>2.2、配置环境变量</h4>
<ul>
<li><strong>ANT_HOME 为 ant解压位置</strong></li>
<li><strong>CLASSPATH为 %ANT_HOME%\lib;</strong></li>
<li><strong>Path为%ANT_HOME%\bin;</strong></li>
</ul>
<h4>2.3、安装验证</h4>
<ul>
<li><strong>环境变量配置成功验证->dos中输入ant，提示：Buildfile: build.xml does not exist!</strong></li>
<li><strong>验证安装结果，命令行输入ant -v，出现版本信息，则安装成功。</strong>
<a href="https://testerhome.com/uploads/photo/2020/f" title="ant验证安装成功"><img width=500 src="https://testerhome.com/uploads/photo/2020/f38bec6f-1598-4d2d-81a3-48cc3b82fa02.png!large" alt="ant验证安装成功" title="ant验证安装成功" /></a></li>
</ul>
<h4>2.4、安装路径</h4>
<p><strong>将JMeter所在目录下extras子目录里的ant-jmeter-1.1.1.jar复制到Ant所在目录lib子目录之下，这样Ant运行时才能找到"org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"这个类，从而成功触发JMeter脚本。
</strong>
<a href="https://testerhome.com/uploads/photo/2020/d3901473-24ac-4eb8-b8df-7c4908715001.png!large" title="复制文件"><img width=500 src="https://testerhome.com/uploads/photo/2020/d3901473-24ac-4eb8-b8df-7c4908715001.png!large" alt="复制文件" title="复制文件" /></a></p>
<h4>2.5、设置格式</h4>
<p>jmeter默认保存的是.csv格式的文件，所以我们先要设置一下bin/jmeter.properties文件内容，保存jmeter.save.saveservice.output_format=xml。
<a href="https://testerhome.com/uploads/photo/2020/d02a7198-d8e3-4df6-9fb8-9ec972d845f6.png!large" title="修改文件格式"><img width=500 src="https://testerhome.com/uploads/photo/2020/d02a7198-d8e3-4df6-9fb8-9ec972d845f6.png!large" alt="修改文件格式" title="修改文件格式" /></a></p>
<h4>2.7、更新文件路径信息</h4>
<ul>
<li><strong>在目录D:\apache-ant-1.9.14下，我们需要先新建一个空的.xml，比如我新建为：uat_parets_build.xml。</strong></li>
<li>
<p><strong>xml模版内容中，对应的路径和脚本，需要按照你自己的实际存放目录去更换。</strong></p>
<p><?xml version="1.0" encoding="UTF-8"?></p>
<project name="ant-jmeter-test" default="run" basedir=".">
    <property environment="env"/>
    <tstamp>
        <format property="time" pattern="yyyyMMddhhmm" />
    </tstamp>
    <!-- 需要改成自己本地的 Jmeter 目录-->  
    <property name="jmeter.home" value="D:\apache-jmeter-5.2.1" />
     <!-- 本地存放报告的路径-->
    <property name="basedirectory" value="D:\XX_BenchmarkTesting\parents\report_csv\uat_report_parent" />
    <!-- 本地存放脚本的路径-->
    <property name="scriptdirectory" value="D:\XX_BenchmarkTesting\parents\scripts" />   
    <!-- jmeter生成jtl格式的结果报告的路径--> 
    <property name="jmeter.result.jtl.dir" value="D:\XX_BenchmarkTesting\parents\jtl" />
    <!-- jmeter生成html格式的结果报告的路径-->
    <property name="jmeter.result.html.dir" value="D:\XX_BenchmarkTesting\parents\html" />
    <!-- 生成的报告的前缀-->  
    <property name="ReportName" value="uat_parent_TestReport" />
    <property name="jmeter.result.jtlName" value="${jmeter.result.jtl.dir}/${ReportName}.jtl" />
    <property name="jmeter.result.htmlName" value="${jmeter.result.html.dir}/${ReportName}${time}.html" />

    <target name="run">
        <antcall target="test" />
        <antcall target="report" />
    </target>

    <target name="test">
        <taskdef name="jmeter" classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask" />
        <jmeter jmeterhome="${jmeter.home}" resultlog="${jmeter.result.jtlName}">
             <!-- 声明要运行的脚本。"*.jmx"指包含此目录下的所有jmeter脚本-->
            <testplans dir="D:\XX_BenchmarkTesting\parents\scripts" includes="*.jmx" />
            <property name="jmeter.save.saveservice.output_format" value="xml"/>
        </jmeter>
    </target>

    <path id="xslt.classpath">
        <fileset dir="${jmeter.home}/lib" includes="xalan*.jar"/>
        <fileset dir="${jmeter.home}/lib" includes="serializer*.jar"/>
    </path> 

    <target name="report">
        <tstamp><format property="report.datestamp" pattern="yyyy/MM/dd HH:mm"/></tstamp>
        <xslt 
              classpathref="xslt.classpath"
              force="true"
              in="${jmeter.result.jtlName}"
              out="${jmeter.result.htmlName}"
              style="${jmeter.home}/extras/jmeter-results-detail-report_21.xsl">
              <param name="dateReport" expression="${report.datestamp}"/>
        </xslt>
                <!-- 因为上面生成报告的时候，不会将相关的图片也一起拷贝至目标目录，所以，需要手动拷贝 --> 
        <copy todir="${jmeter.result.html.dir}">
            <fileset dir="${jmeter.home}/extras">
                <include name="collapse.png" />
                <include name="expand.png" />
            </fileset>
        </copy>
    </target>

</project>
</li>
<li><strong>解释说明，如下图：</strong></li>
</ul>
<p><a href="https://testerhome.com/uploads/photo/2020/7263f336-c6a4-4a2d-907c-556ee522d099.png!large" title="解释说明"><img width=500 src="https://testerhome.com/uploads/photo/2020/7263f336-c6a4-4a2d-907c-556ee522d099.png!large" alt="解释说明" title="解释说明" /></a></p>
<h3>3、开始运行</h3>
<h4>3.1、运行脚本</h4>
<ul>
<li>
<p><strong>D:\XX_BenchmarkTesting\parents\scripts下面的.jmx脚本，生成.jtl文件放入 D:\XX_BenchmarkTesting\parents\jtl文件夹中。</strong></p>
</li>
<li><strong>jtl和html是我自己新建的2个空文件夹，专门是用于存放生成的.jtl和.html文件。</strong>（从上面的<strong><code>xml</code></strong>配置文件中可以看出）
<a href="https://testerhome.com/uploads/photo/2020/2efd4d44-e397-4029-a7cd-7d9bb7eaa21e.png!large" title="说明"><img width=500 src="https://testerhome.com/uploads/photo/2020/2efd4d44-e397-4029-a7cd-7d9bb7eaa21e.png!large" alt="说明" title="说明" /></a></li>
</ul>
<h4>3.2、运行逻辑</h4>
<ul>
<li><strong>然后ant再利用指定的.xsl文件(uat_parets_build.xml定义)去解析.jtl文件，生成的.html文件放在D:\XX_BenchmarkTesting\parents\html文件夹中，简写就是：跑完结果后，.xsl文件把.jtl文件转化成直观的html报告。</strong>
<a href="https://testerhome.com/uploads/photo/2020/36383301-96f4-4bc3-b80e-8c100c8893d9.png!large" title="截图"><img width=500 src="https://testerhome.com/uploads/photo/2020/36383301-96f4-4bc3-b80e-8c100c8893d9.png!large" alt="截图" title="截图" /></a></li>
</ul>
<h4>3.3、具体操作</h4>
<p><strong>CMD切换到D:\apache-ant-1.9.14目录下运行：ant -f uat_parets_build.xml，提示：BUILD SUCCESSFUL，则代表uat_parets_build.xml文件运行成功。jtl和hetml目录下，会自动生成.jtl和.html文件</strong>。
<a href="https://testerhome.com/uploads/photo/2020/9daba396-a4f0-47a8-8d95-70322ce263b1.png!large" title="截图"><img width=500 src="https://testerhome.com/uploads/photo/2020/9daba396-a4f0-47a8-8d95-70322ce263b1.png!large" alt="截图" title="截图" /></a></p>
<h4>3.4、测试报告</h4>
<p><a href="https://testerhome.com/uploads/photo/2020/22b39b99-d4e1-4cd9-8590-2c208843efd9.png!large" title="截图"><img width=500 src="https://testerhome.com/uploads/photo/2020/22b39b99-d4e1-4cd9-8590-2c208843efd9.png!large" alt="截图" title="截图" /></a></p>
<h3>4、优化测试报告</h3>
<h4>4.1、如何优化</h4>
<ul>
<li><strong>下载优化模板 jmeter-results-shanhe-me.xsl，拷贝到jmeter的extras目录中，下载style文件：jmeter.results.shanhe.me.xsl（<a href="http://shanhe.me/download.php?file=jmeter.results.shanhe.me.xsl">http://shanhe.me/download.php?file=jmeter.results.shanhe.me.xsl</a>）。</strong>
<a href="https://testerhome.com/uploads/photo/2020/06399d80-fe83-429b-b067-fc9be892e978.png!large" title="截图说明"><img width=500 src="https://testerhome.com/uploads/photo/2020/06399d80-fe83-429b-b067-fc9be892e978.png!large" alt="截图说明" title="截图说明" /></a></li>
</ul>
<h4>4.2、修改<code>jmeter.properties</code></h4>
<ul>
<li>
<p><strong>修改jmeter.properties文件如下部分，我这里都修改成true，这样执行完脚本后就会保存这些结果到.jtl文件里面，重启jmeter生效。</strong></p>
<p>jmeter.save.saveservice.data_type=true
jmeter.save.saveservice.label=true
jmeter.save.saveservice.response_code=true</p>
<h1>response_data is not currently supported for CSV output</h1>
<p>jmeter.save.saveservice.response_data=true</p>
<h1>Save ResponseData for failed samples</h1>
<p>jmeter.save.saveservice.response_data.on_error=false
jmeter.save.saveservice.response_message=true
jmeter.save.saveservice.successful=true
jmeter.save.saveservice.thread_name=true
jmeter.save.saveservice.time=true
jmeter.save.saveservice.subresults=true
jmeter.save.saveservice.assertions=true
jmeter.save.saveservice.latency=true</p>
<h1>Only available with HttpClient4</h1>
<p>jmeter.save.saveservice.connect_time=true
jmeter.save.saveservice.samplerData=true
jmeter.save.saveservice.responseHeaders=true
jmeter.save.saveservice.requestHeaders=true
jmeter.save.saveservice.encoding=false
jmeter.save.saveservice.bytes=true</p>
<h1>Only available with HttpClient4</h1>
<p>jmeter.save.saveservice.sent_bytes=true
jmeter.save.saveservice.url=true
jmeter.save.saveservice.filename=true
jmeter.save.saveservice.hostname=true
jmeter.save.saveservice.thread_counts=true
jmeter.save.saveservice.sample_count=true
jmeter.save.saveservice.idle_time=true</p>
</li>
</ul>
<h4>4.3、替换xsl文件</h4>
<ul>
<li><strong>接下来，我们还需要将原来.xml文件中的jmeter-results-detail-report_21.xsl，替换为jmeter-results-shanhe-me.xsl。</strong>
<a href="https://testerhome.com/uploads/photo/2020/78a07245-1d69-4ddf-8090-443fa24f2ee0.png!large" title="截图说明"><img width=500 src="https://testerhome.com/uploads/photo/2020/78a07245-1d69-4ddf-8090-443fa24f2ee0.png!large" alt="截图说明" title="截图说明" /></a></li>
</ul>
<h4>4.4、查看优化后的报告</h4>
<ul>
<li><strong>优化后的测试报告样式如下</strong></li>
</ul>
<p><a href="https://testerhome.com/uploads/photo/2020/436043fb-9cca-4496-96b0-38ba85d3e7cc.png!large" title="截图"><img width=500 src="https://testerhome.com/uploads/photo/2020/436043fb-9cca-4496-96b0-38ba85d3e7cc.png!large" alt="截图" title="截图" /></a></p>
<hr />
<h2>上文内容来自如下地址：</h2>
<blockquote>
<blockquote>
<blockquote>
<p><a href="https://testerhome.com/topics/22686">https://testerhome.com/topics/22686</a></p>
</blockquote>
</blockquote>
</blockquote>
<h2>jenkins 部分内容请查看如下地址：</h2>
<blockquote>
<blockquote>
<blockquote>
<p><a href="https://testerhome.com/topics/22700">https://testerhome.com/topics/22700</a></p>
</blockquote>
</blockquote>
</blockquote>
<p><strong>提示：</strong>
用户名：yuxunzhi
密码：xxx22</p></div></body></html>